function varargout = isceread(infile,varargin)

% [C1,(C2),(X,Y,C3)] = isceread(infile,['data_type',type,'number_bands',nband])
% support all file formats generated by ISCE
% Optional input (if not in the xml file)
% type:  can be cfloat, flot32, byte, short
% nband: can be 1 or 2
% C3 outputs the complex matrix for slc and int files
%
%
% Nina Lin, 2019

if ~exist(infile)
    disp('File does not exist.');
    return;
end

if ~exist([infile,'.xml'])
    disp('The xml file needs to be in the same place as the input file!');
    return;
else
    xml=sprintf('%s.xml',infile);
    dict=xml2dict(xml);
    com1dict=dict('coordinate1');
    com2dict=dict('coordinate2');
    width=str2num(com1dict('size'));
    length=str2num(com2dict('size'));
    x0=str2num(com1dict('startingvalue'));
    y0=str2num(com2dict('startingvalue'));
    dx=str2num(com1dict('delta'));
    dy=str2num(com2dict('delta'));
    type=lower(dict('data_type'));               
    nband=str2num(dict('number_bands'));
    if ( isnan(x0) & isnan(y0) )
        x0 = 1;
        y0 = 1;
        dx = 1;
        dy = 1;
    end
end

if mod(numel(varargin),2)~=0
    display('The additional parameters need to be in pair');
    return;
end
if numel(varargin) > 1
    for ii=1:2:numel(varargin)
        if strcmp(varargin(ii),'data_type')
            type = varargin{ii+1};
        end
        if strcmp(varargin{ii},'number_bands')
            nband = varargin{ii+1};
        end
    end
end


if strcmp(type,'')
    display('No data_type is defined in the xml file. Provide it manually.');
    return;
end
if ((nband<1)||(nband>2))
    display(sprintf('The number_bands needs to be either 1 or 2. Now it is %d.',nband));
    return;
end

switch type
    case {'float'} % BIL (rmg)
    
    fid = fopen(infile);
    if nband == 1
        A=fread(fid,[width,length],'float32');
        C1 = A(1:width,:);
        varargout{1} = C1';
    elseif nband ==2
        A=fread(fid,[width*2,length],'float32');
        C1 = A(1:width,:);
        varargout{1} = C1';
        C2 = A(width+1:end,:);
        varargout{2} = C2';
    end
    fclose(fid);
    
    case {'cfloat'} % BIP (c8)
    
    fid=fopen(infile);
    A=fread(fid,[width*2,length],'float32');
    tmp1 = A([1:2:width*2-1],[1:1:length]);
    tmp2 = A([2:2:width*2],[1:1:length]);
    C1 = sqrt(tmp1.^2+tmp2.^2);
    C2 = atan2(tmp2,tmp1);
    C3 = complex(tmp1,tmp2);
    fclose(fid);
    varargout{1} = C1';
    varargout{2} = C2';

    case {'byte'} % (i1)
        
    fid=fopen(infile);
    C = fread(fid,[width,length],'int8');
    varargout{1} = C';
    fclose(fid);
    
    case {'short'} % (i2)
    
    fid=fopen(infile);
    C = fread(fid,[width,length],'int16');
    varargout{1} = C';
    fclose(fid);
    
    otherwise
    
    display(sprintf('The data_type now is %s, not supported by this script.',type));
    return;
   
end

X = x0:dx:(x0+(width-1)*dx);
Y = y0:dy:(y0+(length-1)*dy);
varargout{end+1} = X;
varargout{end+1} = Y;
if sum(strcmp(type,{'slc','int','amp'}))
    varargout{3} = C3';
end
